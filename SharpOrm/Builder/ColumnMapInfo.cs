using SharpOrm.DataTranslation;
using System;
using System.ComponentModel.DataAnnotations;

namespace SharpOrm.Builder
{
    public class ColumnMapInfo
    {
        internal readonly ColumnInfo column;
        internal bool builded;

        internal ColumnMapInfo(ColumnInfo column)
        {
            this.column = column;
        }

        public ColumnMapInfo SetColumn(string name)
        {
            this.CheckBuilded();

            this.column.Name = name;
            this.column.AutoGenerated = false;

            return this;
        }

        public ColumnMapInfo SetTranslation(ISqlTranslation translation)
        {
            this.CheckBuilded();

            this.column.Translation = translation ?? throw new ArgumentNullException(nameof(translation));

            return this;
        }

        public ColumnMapInfo HasMany(string foreignKey, string localKey = "id")
        {
            this.CheckBuilded();

            this.column.HasManyInfo = new HasManyAttribute(foreignKey, localKey);
            this.column.ForeignKey = foreignKey;
            this.column.IsForeignKey = true;

            return this;
        }

        public ColumnMapInfo SetKey(bool value)
        {
            this.CheckBuilded();

            this.column.Key = value;

            return this;
        }

        public ColumnMapInfo SetValidations(params ValidationAttribute[] validations)
        {
            this.CheckBuilded();

            this.column.Validations = validations;
            return this;
        }

        private void CheckBuilded()
        {
            if (this.builded)
                throw new InvalidOperationException("It is not possible to alter the column; it has already been built.");
        }
    }
}
